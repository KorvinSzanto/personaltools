#!/opt/local/bin/php54
<?php
require_once 'libraries/cli.php';

class AddpackageInputParse extends InputParse {
	public $flagMap = [
		'a'=>'addon',
		'r'=>'repository',
		'd'=>'directory',
		'b'=>'branch',
		'u'=>'github-user',
		'l'=>'link',
		'f'=>'force',
		'n'=>'defaults'
	];
}


$ip = new AddpackageInputParse($argv);
if ($ip->getFlag('defaults')) {
	$request = ['binary'];
	$request = array_merge($request,$ip->arguments);
	foreach ($ip->flags as $flag=>$val) {
		$request[]="-$flag=$val";
	}
	$request[] = '-u=concrete5';
	$request[] = '-a';
	$request[] = '-l';
	$ip = new AddpackageInputParse($request);
}

$name = $ip->getArgument(0);
if (!$name) {
	fail('Invalid Package name');
}
chdir('/git/');
if ($ip->getFlag('addon')) {
	chdir('addons');
	$name = str_replace('addon_addon_','addon_',"addon_$name");
}
if ($ip->getFlag('repository')) {
	$repository = $ip->getFlag('repository');
}
if ($ip->getFlag('github-user')) {
	$repository = "git@github.com:".$ip->getFlag('github-user')."/$name";
}
if (!$repository) {
	fail('Invalid Repository.');
}

$directory = $ip->getFlag('directory');

if ($directory) {
	$dir = $directory;
} else {
	$dir = $name;
}
if (is_dir("$dir")) {
	if ($ip->getFlag('force')) {
		run("rm -rf $dir");
	} else if (yesOrNo(getcwd()."/$dir already exists, delete?")) {
		run("rm -r $dir");
	} else {
		fail("","File already exists.");
	}
}

$gc = runOutput("git clone $repository $directory");
if ($ip->getFlag('link') && $ip->getFlag('addon')) {
	if (file_exists("$name/packages") && is_dir("$name/packages"))
	run("ln -s $name/packages/* ../concrete5/web/packages/");
}
if (file_exists($name) && is_dir($name)) {
	if ($ip->getFlag('branch')) {
		run("cd $name","git checkout ".$ip->getFlag('branch'));
	}
	fail("",'Looks like everything went well!');
} else {
	fail("",'Something went wrong.');
}